---
hosts:
  -
    settings:
      # Vagrant Debug
      debug_build: false

      # Identifiers
      hostname: ::SERVER_HOSTNAME::
      domain: ::SERVER_DOMAIN::
      server_id: '::SERVER_ID::'

      # Extra Actions
      post_provision: ::POST_PROVISION:: ## This calls extra things after Ansible completes, like syncing the new SSH key from the lockdown role, or the id_files or the support bundle

      # Resources
      vcpus: ::RESOURCES_CPU::
      memory: ::RESOURCES_RAM::

      # Console Access
      consoleport: ::SERVER_ID::
      consolehost: 0.0.0.0
      show_console: ::SHOW_CONSOLE:: ## Some people have reported issues when VBox doesn't show the Console, default to false

      # Box information
      box: 'STARTcloud/debian12-server'
      box_url: ::BOX_URL:: # Should default to 'https://boxvault.startcloud.com' but can be set to 'https://vagrantcloud.com'
      box_version: 2025.4.30

      # Provider Specific Settings
      provider_type: virtualbox
      os_type: 'Debian_64'
      firmware_type: UEFI

      # Setup Variables
      setup_wait: 420

      # Vagrant Configurations
      vagrant_user: ::SERVER_DEFAULT_USER:: #  startcloud
      vagrant_user_pass: ::SERVER_DEFAULT_USER_PASS:: # 'STARTcloud24@!'
      vagrant_user_private_key_path: ./id_rsa
      vagrant_ssh_insert_key: true
      vagrant_ssh_forward_agent: true
      vagrant_ssh_keep_alive: true

    plugins:
      install:
        -
          name: vagrant-scp-sync
          version: latest
      remove:
        -
          name: vagrant-scp

    networks:
      # if ::NO_BRIDGE_INTERFACE::
      # TO SHI DEVs, if user wants to to disable the external bridged interface, then you should remove the below block
      -
        type: external
        address: ::NETWORK_ADDRESS::
        netmask: ::NETWORK_NETMASK::
        gateway: ::NETWORK_GATEWAY::
        autoconf: false
        vlan:
        dhcp4: ::NETWORK_DHCP4::
        dhcp6: false
        is_control: false
        route: default
        provisional: false
        bridge: ::NETWORK_BRIDGE::
        nic_type: virtio
        mac: auto
        dns:
          - nameserver: ::NETWORK_DNS_NAMESERVER_1::
          - nameserver: ::NETWORK_DNS_NAMESERVER_2::

    disks:
      boot:
        array: null
        dataset: null
        volume_name: null
        mount: /
        size: 48G
    
      additional_disks:
      # if ::ADDITIONAL_DISK::
      # TO SHI DEVs, if user wants to store thier data on a secondary disk, you would enable this block
      #  - array: null
      #    dataset: null
      #    sparse: true
      #    live: false
      #    filesystem: xfs
      #    mount: ::ADDITIONAL_DISK_MOUNT_POINT::
      #    size: ::ADDITIONAL_DISK_SIZE::
      #    port: 5
      #    device: vdb
      #    #driver: virtio-scsi #Only add if your template doesn't already use virtio-scsi(the new templates do)
      #    volume_name: disk1

    provisioning:
      shell:
        enabled: false
        scripts:
          - './scripts/aliases.sh'

      ansible:
        enabled: true
        playbooks:
          - local:
              -
                description: "This playbook imports Hosts.yml variables into a generated playbook: /vagrant/ansible/playbook.yml"
                playbook: ansible/generate-playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                callbacks: profile_tasks
                run: always
                remote_collections: false
                collections: []
              -
                description: "This playbook configures the machine using the generated playbook: /vagrant/ansible/playbook.yml"
                playbook: ansible/playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                callbacks: profile_tasks
                run: once
                remote_collections: false
                collections:
                  - startcloud.startcloud_roles
                  - startcloud.hcl_roles
              -
                description: "This playbook configures the machine for roles tagged as always, using the generated playbook: /vagrant/ansible/playbook.yml"
                playbook: ansible/always-playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                callbacks: profile_tasks
                run: not_first
                remote_collections: false
                collections:
                  - startcloud.startcloud_roles

    folders:
      -
        description: "Disables VBoxSF, do not enable"
        map: .
        to: /vagrant
        type: virtualbox
        disabled: true
        automount: true

      -
        description: "Directory for Ansible Scripts"
        map: ./provisioners/ansible/
        to: /vagrant/ansible/
        type: ::SYNC_METHOD:: ## rsync or scp
        args:
          - '--verbose'
          - '--archive'
          - '--delete'
          - '-z'
          - '--copy-links'

      -
        description: "Directory for Ansible Collections"
        map: ./provisioners/ansible_collections/
        to: /vagrant/ansible_collections/
        type: ::SYNC_METHOD:: ## rsync or scp
        args:
          - '--verbose'
          - '--archive'
          - '--delete'
          - '-z'
          - '--copy-links'

      -
        description: "Directory for Application Installers"
        map: ./installers/
        to: /vagrant/installers/
        type: ::SYNC_METHOD:: ## rsync or scp

      -
        description: "Directory for Pre-Signed SSLs"
        map: ./ssls/
        to: /secure/
        type: ::SYNC_METHOD:: ## rsync or scp

    vars:
      # Secrets Override: If you don't want to use a secrets file you can override secrets here
      # Uncomment and fill in these lines if you want to download the installers for this instance
      # Note that the installer names must match the names on the download server.
      #secrets:
      #  domino_installer_base_url: ::DOWNLOAD_BASE_URL::
      #  domino_installer_url_user: ::DOWNLOAD_AUTH_USER::
      #  domino_installer_url_pass: ::DOWNLOAD_AUTH_PASS::

      ## Provisioner Debug
      debug_all: ::DEBUG_ALL_ANSIBLE_TASKS::

      ## SSL
      selfsigned_enabled: ::CERT_SELFSIGNED::
      haproxy_ssl_redirect: true
      letsencrypt_enabled: false
      letsencrypt_staging_enabled: false

      ## Use Proxy for downloads and updates
      use_proxy: ::USE_HTTP_PROXY::
      proxy_server: ::HTTP_PROXY_HOST::
      proxy_port: ::HTTP_PROXY_PORT::

      ## Extra Packages
      extra_packages: ['htop']

      service_user: voltmx
      service_group: voltmx
      service_home_dir: /local/voltmx
      cert_pass: SuperSecureSecretPassword@!

      voltmx_installer_archive: VoltFoundrySetup-9.5.18.1_GA.tar.gz
      voltmx_admin_first_name: VoltMX
      voltmx_admin_last_name: Admin
      voltmx_admin_email: support@prominic.net
      voltmx_admin_pass: "SomeRandomPasswordSecureMe@!"
      voltmx_installation_type: Development

      mariadb_admin_pass: SomeMariaDBeyPassword
      mariadb_admin_user: root

      haproxy_http_port: 80
      haproxy_https_port: 443

      ## Hosts entries for /etc/hosts ## Really only needed for Standalone
      #etc_hosts_entries:
      #  - hostname: ::DOMINO_ORIGIN_HOSTNAME::.::DOMINO_ORIGIN_DOMAIN::
      #    aliases:
      #      - ::DOMINO_ORIGIN_HOSTNAME::
      #    ip: ::DOMINO_ORIGIN_SERVER_IP::

    roles:
      - name: startcloud.startcloud_roles.setup
      - name: startcloud.startcloud_roles.networking
        tags: always
      - name: startcloud.startcloud_roles.disks
      - name: startcloud.startcloud_roles.hostname
      - name: startcloud.startcloud_roles.dependencies
      - name: startcloud.startcloud_roles.mdns
      - name: startcloud.startcloud_roles.service_user
      - name: startcloud.startcloud_roles.sdkman_install
      - name: startcloud.startcloud_roles.sdkman_java
      - name: startcloud.startcloud_roles.ssl
      - name: startcloud.startcloud_roles.mariadb

      ## VoltMX Roles
      - name: startcloud.hcl_roles.voltmx
        vars:
          run_tasks: ::ROLE_VOLTMX::
      - name: startcloud.hcl_roles.domino_voltmx_go
        vars:
          run_tasks: ::ROLE_VOLTMX::

      - name: startcloud.startcloud_roles.quick_start
        tags: always
        vars:
          run_tasks: ::ROLE_STARTCLOUD_QUICK_START::
      - name: startcloud.startcloud_roles.haproxy
        vars:
          run_tasks: ::ROLE_STARTCLOUD_HAPROXY::
      - name: startcloud.startcloud_roles.vagrant_readme
        vars:
          run_tasks: ::ROLE_STARTCLOUD_VAGRANT_README::
      - name: startcloud.startcloud_roles.lockdown
        vars:
          run_tasks: true
