---
hosts:
  -
    settings:
      # Vagrant Debug
      debug_build: true

      # Identifiers
      hostname: vmx
      domain: pmagold.com
      server_id: '8619'

      # Extra Actions
      post_provision: true ## This calls extra things after Ansible completes, like syncing the new SSH key from the lockdown role, or the id_files or the support bundle

      # Resources
      vcpus: 2
      memory: 16G

      # Console Access
      consoleport: '8619'
      consolehost: 0.0.0.0
      show_console: false

      # Box information
      box: 'STARTcloud/debian12-server'
      box_url: 'https://boxvault.startcloud.com'
      box_version: 2025.4.30

      # Provider Specific Settings
      provider_type: zones
      os_type: 'generic'
      firmware_type: UEFI

      # Setup Variables
      setup_wait: 420

      # Vagrant Configurations
      vagrant_user: startcloud
      vagrant_user_pass: 'STARTcloud24@!'
      vagrant_user_private_key_path: ./core/ssh_keys/id_rsa
      vagrant_ssh_insert_key: true
      vagrant_ssh_forward_agent: true
      vagrant_ssh_keep_alive: true

    plugins:
      install:
        -
          name: vagrant-scp-sync
          version: latest
      remove:
        -
          name: vagrant-scp

    zones:
      on_demand_vnics: true
      post_provision_boot: true
      vmtype: production
      brand: bhyve
      console_onboot: false
      console: webvnc
      debug: false
      debug_boot: false
      hostbridge: i440fx
      acpi: on
      autostart: true
      setup_method: zlogin
      diskif: virtio
      netif: virtio-net-viona
      booted_string: 'Web console:'
      lcheck_string: ':~$'
      alcheck_string: 'login:'
      safe_restart: 'sudo shutdown -r'
      safe_shutdown: 'sudo init 0 || true'
      clean_shutdown_time: 200
      snapshot_script: '/opt/vagrant/bin/Snapshooter.sh'
      cpu_configuration: simple

    networks:
      -
        type: external
        address: 172.17.205.193
        netmask: 255.255.0.0
        gateway: 172.17.1.1
        autoconf: false
        vlan: 0
        dhcp4: false
        dhcp6: false
        is_control: false
        route: default
        provisional: false
        bridge: igb0
        #nic_type: virtio
        mac: auto
        dns:
          - nameserver: 199.103.7.51
          - nameserver: 199.103.5.20
          - nameserver: 208.85.189.20
          - nameserver: 208.85.188.127
      -
        type: external
        address: 10.190.190.2
        netmask: 255.255.255.0
        gateway: 10.190.190.1
        autoconf: false
        vlan: 0
        dhcp4: false
        dhcp6: false
        is_control: true
        route: 10.190.190.1/24
        provisional: true
        bridge: estub_vz_1
        mac: auto
        dns:
          - nameserver: 199.103.7.51
          - nameserver: 199.103.5.20
          - nameserver: 208.85.189.20
          - nameserver: 208.85.188.127

    disks:
      boot:
        array: Array-0
        dataset: zones
        volume_name: boot
        mount: /
        size: 64G

      additional_disks:
        -
          array: Array-0
          dataset: zones
          sparse: true
          live: false
          filesystem: ext4
          mount: /local
          size: 100.0G
          device: vdb
          volume_name: disk1

    provisioning:
      shell:
        enabled: false
        scripts:
          - './scripts/aliases.sh'

      ansible:
        enabled: true
        playbooks:
          - local:
              -
                description: "This playbook imports Hosts.yml variables into a generated playbook: /vagrant/ansible/playbook.yml"
                playbook: ansible/generate-playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                callbacks: profile_tasks
                run: always
                remote_collections: false
                collections: []

              -
                description: "This playbook configures the machine using the generated playbook: /vagrant/ansible/playbook.yml"
                playbook: ansible/playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                callbacks: profile_tasks
                run: once
                remote_collections: false
                collections:
                  - startcloud.startcloud_roles
                  - startcloud.hcl_roles
                  - prominic.prominic_roles
              -
                description: "This playbook configures the machine for roles tagged as always, using the generated playbook: /vagrant/ansible/playbook.yml"
                playbook: ansible/always-playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
                callbacks: profile_tasks
                run: not_first
                remote_collections: false
                collections:
                  - startcloud.startcloud_roles

      docker:
        enabled: false
        docker_compose:
          - '/vagrant/installers/docker/docker-compose.yml'

    folders:
      -
        description: "Disables VBoxSF, do not enable"
        map: .
        to: /vagrant
        type: virtualbox
        disabled: true
        automount: true

      -
        description: "Directory for Ansible Scripts"
        map: ./provisioners/ansible/
        to: /vagrant/ansible/
        type: rsync
        args:
          - '--verbose'
          - '--archive'
          - '--delete'
          - '-z'
          - '--copy-links'

      -
        description: "Directory for Ansible Collections"
        map: ./provisioners/ansible_collections/
        to: /vagrant/ansible_collections/
        type: rsync
        args:
          - '--verbose'
          - '--archive'
          - '--delete'
          - '-z'
          - '--copy-links'

      -
        description: "Directory for Application Installers"
        map: ./installers/
        to: /vagrant/installers/
        type: rsync

      -
        description: "Directory for Pre-Signed SSLs"
        map: ./ssls/
        to: /secure/
        type: rsync
    vars:
      # Secrets Override: If you don't want to use a secrets file you can override secrets here
      # Uncomment and fill in these lines if you want to download the installers for this instance
      # Note that the installer names must match the names on the download server.
      #secrets:
      #  domino_installer_base_url: "https://XXXXXXXXX.XXXXXXXXX.XXX"
      #  domino_installer_url_user: "XXXXXXXXXXXX@XXXXXXXXXXX"
      #  domino_installer_url_pass: "XXXXXXXXXXXX"

      provisioner: hcl_voltmx_go_provisioner

      ## Provisioner Debug
      debug_all: true

      ## SSL
      selfsigned_enabled: true
      haproxy_ssl_redirect: true
      letsencrypt_enabled: false
      letsencrypt_staging_enabled: false

      ## Use Proxy for downloads and updates
      use_proxy: false
      proxy_server:
      proxy_port: 3128

      ## Extra Packages
      extra_packages: ['htop']

      service_user: voltmx
      service_group: voltmx
      service_home_dir: /local/voltmx
      cert_pass: SuperSecureSecretPassword@!

      voltmx_installer_archive: VoltFoundrySetup-9.5.18.1_GA.tar.gz
      voltmx_admin_first_name: VoltMX
      voltmx_admin_last_name: Admin
      voltmx_admin_email: support@prominic.net
      voltmx_admin_pass: "SomeRandomPasswordSecureMe@!"
      voltmx_installation_type: Development
      voltmx_upgrade: false

      mysql_root_username: root
      mysql_root_password: "Jheakxe7BE3gA3"

      haproxy_http_port: 80
      haproxy_https_port: 443

      dns_entries_list:
          - console
          - downloads
          - welcome
          - voltmx
          - www

      ## Hosts entries for /etc/hosts
      #etc_hosts_entries:
      #  - hostname: test.domain.com
      #    aliases:
      #      - test
      #    ip: 255.255.255.255

    roles:
      - name: startcloud.startcloud_roles.setup
      - name: startcloud.startcloud_roles.networking
        tags: always
      - name: startcloud.startcloud_roles.disks
      - name: startcloud.startcloud_roles.hostname
      - name: startcloud.startcloud_roles.dependencies
      - name: startcloud.startcloud_roles.mdns
      - name: startcloud.startcloud_roles.service_user
      - name: startcloud.startcloud_roles.sdkman_install
      - name: startcloud.startcloud_roles.sdkman_java
      - name: startcloud.startcloud_roles.ssl
      - name: startcloud.startcloud_roles.mysql

      ## VoltMX Roles
      - name: startcloud.hcl_roles.voltmx
      - name: startcloud.hcl_roles.domino_voltmx_go

      - name: startcloud.startcloud_roles.quick_start
        tags: always
      - name: startcloud.startcloud_roles.haproxy
      - name: startcloud.startcloud_roles.vagrant_readme
      - name: startcloud.startcloud_roles.lockdown
